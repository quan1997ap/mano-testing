{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","ɵ0","token","Inject","Optional","Self","SkipSelf","Host","ɵ1","attributeName","Attribute","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","InjectionToken","_desc","__NG_ELEMENT_ID__","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","NullInjector","error_1","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_LOCALE_ID_DEF","ngLocaleIdDef","NG_BASE_DEF","ngBaseDef","NG_FACTORY_DEF","ngFactoryDef","NG_ELEMENT_ID","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","template","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","getFactoryDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponent","isComponentDef","isRootView","elementDepthCount","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","_stylingState","_stateStorage","Map","_stylingElement","STYLING_INDEX_START_VALUE","BIT_MASK_START_VALUE","getStylingState","element","readFromMap","classesBitMask","classesIndex","stylesBitMask","stylesIndex","resetStylingState","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","lView","previousOrParentTNode","isParent","MIN_DIRECTIVE_ID","activeDirectiveId","activeDirectiveSuperClassDepthPosition","activeDirectiveSuperClassHeight","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","incrementActiveDirectiveId","adjustActiveDirectiveSuperClassDepthPosition","delta","Math","max","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","_isParent","setTNodeAndViewData","view","getIsParent","setIsNotParent","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","selectView","newView","hostTNode","oldView","nextContextImpl","level","walkUpViews","nestingLevel","currentView","getSelectedIndex","_currentSanitizer","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","RendererStyleFlags3","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","updateLastDirectiveIndex","lastDirectiveIndex","markContextToPersistState","setConfig","getConfig","getProp","getPropConfig","isSanitizationRequired","getGuardMask","setGuardMask","maskValue","config","getValuesCount","getBindingValue","offset","getDefaultValue","allowStylingFlush","isContextLocked","stateIsPersisted","getPropValuesStartPosition","hasValueChanged","a","compareValueA","compareValueB","is","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","setMapValue","getMapValue","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","ANIMATION_PROP_PREFIX","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","Function","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","load","getComponentViewByIndex","nodeIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","resetPreOrderHookFlags","getLViewParent","parent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstTemplatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","classes","attrsLength","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","directiveStart","cptViewProvidersCount","endIndex","directiveEnd","providerTokenOrDef","dirDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ɵɵgetInheritedFactory","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","prop","ɵɵsanitizeUrlOrResourceUrl","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","end","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","DEFAULT_GUARD_MASK_VALUE","STYLING_INDEX_FOR_MAP_BINDING","DEFAULT_BINDING_VALUE","DEFAULT_SIZE_VALUE","deferredBindingQueue","updateClassBinding","bindingIndex","deferRegistration","forceUpdate","isMapBased","state","updateBindingData","updateStyleBinding","counterIndex","sanitizationRequired","deferBindingRegistration","flushDeferredBindings","registerBinding","changed","countId","bindingValue","registered","found","valuesCount","allocateNewContextEntry","addBindingIntoContext","firstValueIndex","lastValueIndex","maybeApplyStyling","allowFlush","bitMask","styleSetter","styleSanitizer","lockAndFinalizeContext","initialValues","updateInitialStylingOnContext","initialStyling","lockContext","contextHasUpdates","applyStyling","bindingData","bitMaskValue","applyStylingFn","normalizeBitMaskValue","stylingMapsSyncFn","getStylingMapsSyncFn","_activeStylingMapApplyFn","mapsMode","valueApplied","valuesCountUpToDefault","defaultValue","valueAppliedWithinMap","setStyle","nativeStyle","style","DashCase","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","isClassBased","stylingMapArr","NO_CHANGE","ELEMENT_MARKER","COMMENT_MARKER","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","resolveInnerMapMode","isValueAllowedToBeApplied","useDefault","valueToApply","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","activateStylingMapFeature","setStylingMapsSyncFn","currentMode","isExactMatch","innerMode","doApplyValue","addItemToStylingMap","allowOverwrite","propAtIndex","applied","stylingMapToString","attrValue","stylingMapToStringMap","stringMap","TStylingContextDebug","enumerable","configurable","entries","guardMask","bindingsStartPosition","sources","NodeStylingDebug","_data","_isClassBased","_sanitizer","overrideSanitizer","_mapValues","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","readLViewValue","TView","queries","bindingStartIndex","expandoStartIndex","expandoInstructions","staticViewQueries","staticContentQueries","cleanup","directiveRegistry","pipeRegistry","TNode","tView_","propertyMetadataStartIndex","propertyMetadataEndIndex","localNames","initialInputs","tViews","projectionNext","projection","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","nodes","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","childViews","childHead","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","ɵɵselect","selectInternal","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","refreshDynamicEmbeddedViews","viewOrContainer","embeddedLView","embeddedTView","setHostBindings","viewData","selectedIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesAndLocals","localRefExtractor","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","direction","propStore","isInput","defs","propertyAliasMap","internalName","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","elementPropertyInternal","nativeOnly","loadRendererFn","inputData","dataValue","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","i_1","minifiedInputName","privateName","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","createLContainer","hostNative","isForViewContainerRef","componentHostIdx","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","setValue","renderInitialStyling","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","declaredViews","lQueries","detachMovedView","projectedViews","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","getHostNative","ShadowDom","Native","insertBefore","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","tViewNodeChild","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","tNodeType","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","componentIndex","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","compileInjectable","srcMeta","hasAProvider","isUseClassProvider","isUseFactoryProvider","isUseValueProvider","isUseExistingProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","useClass","useFactory","useExisting","USE_VALUE$1","USE_VALUE$2","EMPTY_ARRAY$1","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","render2CompileInjectable","injectableType","APP_ROOT","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","injectorDefTypes","Set","_destroyed","dedupStack","injectorDef","processInjectorType","processProvider","set","makeRecord","isRootInjector","has","assertNotDestroyed","service","previousInjector","record","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL","INJECTOR_IMPL__PRE_R3__","StaticInjector","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","_records","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multiProvider","multiProviderMixError","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵproperty","bindReconciledValue","ɵɵattribute","bound","interpolationV","isBindingUpdated","storeBindingMetadata","prefix","suffix","lastBindingIndex","interpolation1","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","ɵɵtemplate","tContainerNode","embeddedTViewNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵɵstyling","updateLastDirectiveIndex$1","getClassesContext","getStylesContext","getActiveDirectiveStylingIndex","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","_stylingProp","resolveStylePropValue","resolvedValue","deferStylingUpdate","ɵɵclassProp","defer","updated","ɵɵstyleMap","updateDirectiveInputValue","_stylingMap","ɵɵclassMap","classMapInternal","valueHasChanged","normalizeIntoStylingMap","newValues","normalizeProps","allValuesTrue","newValue","normalizeStylingDirectiveInputValue","initialValue","forceClassesAsString","forceStylesAsString","ɵɵstylingApply","getRenderer","flushStyling","classesContext","stylesContext","persistState","allowFlushClasses","allowFlushStyles","classesFlushed","stylesFlushed","deleteStylingStateFromStorage","storeStylingState","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getActiveDirectiveId","getActiveDirectiveSuperClassDepth","getContext","allocTStylingContext","getActiveDirectiveSuperClassHeight","ɵɵelementStart","getNamespace","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","processOutputs","lCleanupIndex","existingListener","hasDirectives","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextBinding","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext$1","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","resetAllStylingState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","LOCALE_DATA","ɵLocaleDataIndex","u","localeEn","plural","floor","abs","getLocalePluralCase","locale","findLocaleData","PluralCase","normalizedLocale","parentLocale","DEFAULT_LOCALE_ID","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","TRANSLATIONS","LOCALIZE_PH_REGEXP","ɵɵi18nLocalize","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","getRegisteredNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","proto","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","getComponentMetadata","compileFactory","hasSelectorScope","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","usesInheritance","addBaseDefToUndecoratedParents","compileDirective","getDirectiveMetadata","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","getPipeMetadata","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","LOCALE_ID$1","TRANSLATIONS$1","TRANSLATIONS_FORMAT","ivyEnabled","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","NgModuleFactoryLoader","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","collectClassNames","debugElement","tNodeAttrs","lowercaseTNodeAttrs","eAttrs","_getStylingDebugInfo","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","debugNode","getDebugNode","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","platformCore","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_r","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_s","ɵangular_packages_core_core_g","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_l","ɵangular_packages_core_core_k","ɵangular_packages_core_core_a","ɵangular_packages_core_core_c","ɵangular_packages_core_core_b","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_j","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bm","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵDEFAULT_LOCALE_ID","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵLOCALE_DATA","ɵallowSanitizationBypassAndThrow","ɵgetSanitizationBypassType","ɵunwrapSafeValue","ɵdetectChanges","ɵrenderComponent","renderComponent$1","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵi18nConfigureLocalize","i18nConfigureLocalize","translations","ɵsetLocaleId","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","INJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-next.4\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0 = function (token) { return ({ token: token }); };\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', ɵ0);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    var ɵ1 = function (attributeName) { return ({ attributeName: attributeName }); };\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', ɵ1);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` in a way which is immune to accidentally reading inherited\n     * value.\n     *\n     * @param type A type which may have its own (non-inherited) `ngInjectableDef`.\n     */\n    function getInjectableDef(type) {\n        var def = type[NG_INJECTABLE_DEF];\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ngInjectableDef's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` or read the `ngInjectableDef` from one of its ancestors.\n     *\n     * @param type A type which may have `ngInjectableDef`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ngInjectableDef` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        if (type && type[NG_INJECTABLE_DEF]) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return type[NG_INJECTABLE_DEF];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error_1 = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error_1.name = 'NullInjectorError';\n                throw error_1;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg);\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n            stylingWritePersistedState: 0,\n            stylingReadPersistedState: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * NOTE: changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_LOCALE_ID_DEF = getClosureSafeProperty({ ngLocaleIdDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    var NG_FACTORY_DEF = getClosureSafeProperty({ ngFactoryDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: null,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            type: pipeDef.type,\n            name: pipeDef.name,\n            factory: null,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getFactoryDef(type, throwNotFound) {\n        var factoryFn = type[NG_FACTORY_DEF] || null;\n        if (!factoryFn && throwNotFound === true && ngDevMode) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngFactoryDef' property.\");\n        }\n        return factoryFn;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOCALE_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var DECLARATION_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstTemplatePass(tView, errMessage) {\n        assertEqual(tView.firstTemplatePass, true, errMessage || 'Should only be called in first template pass.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' &&\n            Object.getPrototypeOf(obj) == NodeInjectorFactory.prototype;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * // TODO(matsko): add updateMask info\n     *\n     * This file contains all state-based logic for styling in Angular.\n     *\n     * Styling in Angular is evaluated with a series of styling-specific\n     * template instructions which are called one after another each time\n     * change detection occurs in Angular.\n     *\n     * Styling makes use of various temporary, state-based variables between\n     * instructions so that it can better cache and optimize its values.\n     * These values are usually populated and cleared when an element is\n     * exited in change detection (once all the instructions are run for\n     * that element).\n     *\n     * There are, however, situations where the state-based values\n     * need to be stored and used at a later point. This ONLY occurs when\n     * there are template-level as well as host-binding-level styling\n     * instructions on the same element. The example below shows exactly\n     * what could be:\n     *\n     * ```html\n     * <!-- two sources of styling: the template and the directive -->\n     * <div [style.width]=\"width\" dir-that-sets-height></div>\n     * ```\n     *\n     * If and when this situation occurs, the current styling state is\n     * stored in a storage map value and then later accessed once the\n     * host bindings are evaluated. Once styling for the current element\n     * is over then the map entry will be cleared.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    var _stylingState = null;\n    var _stateStorage = new Map();\n    // this value is not used outside this file and is only here\n    // as a caching check for when the element changes.\n    var _stylingElement = null;\n    var STYLING_INDEX_START_VALUE = 1;\n    var BIT_MASK_START_VALUE = 0;\n    function getStylingState(element, readFromMap) {\n        if (!_stylingElement || element !== _stylingElement) {\n            _stylingElement = element;\n            if (readFromMap) {\n                _stylingState = _stateStorage.get(element) || null;\n                ngDevMode && ngDevMode.stylingReadPersistedState++;\n            }\n            _stylingState = _stylingState || {\n                classesBitMask: BIT_MASK_START_VALUE,\n                classesIndex: STYLING_INDEX_START_VALUE,\n                stylesBitMask: BIT_MASK_START_VALUE,\n                stylesIndex: STYLING_INDEX_START_VALUE,\n            };\n        }\n        return _stylingState;\n    }\n    function resetStylingState() {\n        _stylingState = null;\n        _stylingElement = null;\n    }\n    function storeStylingState(element, state) {\n        ngDevMode && ngDevMode.stylingWritePersistedState++;\n        _stateStorage.set(element, state);\n    }\n    function deleteStylingStateFromStorage(element) {\n        _stateStorage.delete(element);\n    }\n    function resetAllStylingState() {\n        resetStylingState();\n        _stateStorage.clear();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var MIN_DIRECTIVE_ID = 1;\n    var activeDirectiveId = MIN_DIRECTIVE_ID;\n    /**\n     * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n     */\n    var activeDirectiveSuperClassDepthPosition = 0;\n    /**\n     * Total count of how many directives are a part of an inheritance chain.\n     *\n     * When directives are sub-classed (extended) from one to another, Angular\n     * needs to keep track of exactly how many were encountered so it can accurately\n     * generate the next directive id (once the next directive id is visited).\n     * Normally the next directive id just a single incremented value from the\n     * previous one, however, if the previous directive is a part of an inheritance\n     * chain (a series of sub-classed directives) then the incremented value must\n     * also take into account the total amount of sub-classed values.\n     *\n     * Note that this value resets back to zero once the next directive is\n     * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n     * is called).\n     */\n    var activeDirectiveSuperClassHeight = 0;\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (_selectedIndex !== elementIndex) {\n            setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n            activeDirectiveId = elementIndex === null ? 0 : MIN_DIRECTIVE_ID;\n            activeDirectiveSuperClassDepthPosition = 0;\n            activeDirectiveSuperClassHeight = 0;\n        }\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n        // because we are dealing with a new directive this\n        // means we have exited out of the inheritance chain\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n    /**\n     * Set the current super class (reverse inheritance) position depth for a directive.\n     *\n     * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n     * <div child-dir other-dir></div>\n     *\n     * // increment\n     * parentInstance->hostBindings() (depth = 1)\n     * // decrement\n     * childInstance->hostBindings() (depth = 0)\n     * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function adjustActiveDirectiveSuperClassDepthPosition(delta) {\n        activeDirectiveSuperClassDepthPosition += delta;\n        // we keep track of the height value so that when the next directive is visited\n        // then Angular knows to generate a new directive id value which has taken into\n        // account how many sub-class directives were a part of the previous directive.\n        activeDirectiveSuperClassHeight =\n            Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n    }\n    /**\n     * Returns he current depth of the super/sub class inheritance chain.\n     *\n     * This will return how many inherited directive/component classes\n     * exist in the current chain.\n     *\n     * ```typescript\n     * @Directive({ selector: '[super-dir]' })\n     * class SuperDir {}\n     *\n     * @Directive({ selector: '[sub-dir]' })\n     * class SubDir extends SuperDir {}\n     *\n     * // if `<div sub-dir>` is used then the super class height is `1`\n     * // if `<div super-dir>` is used then the super class height is `0`\n     * ```\n     */\n    function getActiveDirectiveSuperClassHeight() {\n        return activeDirectiveSuperClassHeight;\n    }\n    /**\n     * Returns the current super class (reverse inheritance) depth for a directive.\n     *\n     * This is designed to help instruction code distinguish different hostBindings\n     * calls from each other when a directive has extended from another directive.\n     * Normally using the directive id value is enough, but with the case\n     * of parent/sub-class directive inheritance more information is required.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function getActiveDirectiveSuperClassDepth() {\n        return activeDirectiveSuperClassDepthPosition;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        previousOrParentTNode = tNode;\n        isParent = _isParent;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsNotParent() {\n        isParent = false;\n    }\n    function setIsParent() {\n        isParent = true;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param host Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function selectView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n        setCurrentStyleSanitizer(null);\n        resetAllStylingState();\n    }\n    var _selectedIndex = -1;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index;\n        // we have now jumped to another element\n        // therefore the state is stale\n        resetStylingState();\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n    var _currentSanitizer;\n    function setCurrentStyleSanitizer(sanitizer) {\n        _currentSanitizer = sanitizer;\n    }\n    function getCurrentStyleSanitizer() {\n        return _currentSanitizer;\n    }\n\n    var MAP_BASED_ENTRY_PROP_NAME = '--MAP--';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling) {\n        // because map-based bindings deal with a dynamic set of values, there\n        // is no way to know ahead of time whether or not sanitization is required.\n        // For this reason the configuration will always mark sanitization as active\n        // (this means that when map-based values are applied then sanitization will\n        // be checked against each property).\n        var mapBasedConfig = 1 /* SanitizationRequired */;\n        return [\n            initialStyling || [''],\n            0 /* Initial */,\n            TEMPLATE_DIRECTIVE_INDEX,\n            mapBasedConfig,\n            0,\n            MAP_BASED_ENTRY_PROP_NAME,\n        ];\n    }\n    /**\n     * Sets the provided directive as the last directive index in the provided `TStylingContext`.\n     *\n     * Styling in Angular can be applied from the template as well as multiple sources of\n     * host bindings. This means that each binding function (the template function or the\n     * hostBindings functions) will generate styling instructions as well as a styling\n     * apply function (i.e. `stylingApply()`). Because host bindings functions and the\n     * template function are independent from one another this means that the styling apply\n     * function will be called multiple times. By tracking the last directive index (which\n     * is what happens in this function) the styling algorithm knows exactly when to flush\n     * styling (which is when the last styling apply function is executed).\n     */\n    function updateLastDirectiveIndex(context, lastDirectiveIndex) {\n        if (lastDirectiveIndex === TEMPLATE_DIRECTIVE_INDEX) {\n            var currentValue = context[2 /* LastDirectiveIndexPosition */];\n            if (currentValue > TEMPLATE_DIRECTIVE_INDEX) {\n                // This means that a directive or two contained a host bindings function, but\n                // now the template function also contains styling. When this combination of sources\n                // comes up then we need to tell the context to store the state between updates\n                // (because host bindings evaluation happens after template binding evaluation).\n                markContextToPersistState(context);\n            }\n        }\n        else {\n            context[2 /* LastDirectiveIndexPosition */] = lastDirectiveIndex;\n        }\n    }\n    function getConfig(context) {\n        return context[1 /* ConfigPosition */];\n    }\n    function setConfig(context, value) {\n        context[1 /* ConfigPosition */] = value;\n    }\n    function getProp(context, index) {\n        return context[index + 2 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigAndGuardOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) > 0;\n    }\n    function getGuardMask(context, index) {\n        var configGuardValue = context[index + 0 /* ConfigAndGuardOffset */];\n        return configGuardValue >> 1 /* TotalBits */;\n    }\n    function setGuardMask(context, index, maskValue) {\n        var config = getPropConfig(context, index);\n        var guardMask = maskValue << 1 /* TotalBits */;\n        context[index + 0 /* ConfigAndGuardOffset */] = config | guardMask;\n    }\n    function getValuesCount(context, index) {\n        return context[index + 1 /* ValuesCountOffset */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 3 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        var valuesCount = getValuesCount(context, index);\n        return context[index + 3 /* BindingsStartOffset */ + valuesCount - 1];\n    }\n    /**\n     * Temporary function which determines whether or not a context is\n     * allowed to be flushed based on the provided directive index.\n     */\n    function allowStylingFlush(context, index) {\n        return (context && index === context[2 /* LastDirectiveIndexPosition */]) ? true :\n            false;\n    }\n    function lockContext(context) {\n        setConfig(context, getConfig(context) | 1 /* Locked */);\n    }\n    function isContextLocked(context) {\n        return (getConfig(context) & 1 /* Locked */) > 0;\n    }\n    function stateIsPersisted(context) {\n        return (getConfig(context) & 2 /* PersistStateValues */) > 0;\n    }\n    function markContextToPersistState(context) {\n        setConfig(context, getConfig(context) | 2 /* PersistStateValues */);\n    }\n    function getPropValuesStartPosition(context) {\n        return 6 /* MapBindingsBindingsStartPosition */ +\n            context[4 /* MapBindingsValuesCountPosition */];\n    }\n    function isMapBased(prop) {\n        return prop === MAP_BASED_ENTRY_PROP_NAME;\n    }\n    function hasValueChanged(a, b) {\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        // these are special cases for String based values (which are created as artifacts\n        // when sanitization is bypassed on a particular value)\n        if (compareValueA instanceof String) {\n            compareValueA = compareValueA.toString();\n        }\n        if (compareValueB instanceof String) {\n            compareValueB = compareValueB.toString();\n        }\n        return !Object.is(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[0 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            value.length >= 6 /* MapBindingsBindingsStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str = concatString(str, prop + \":\" + styles[prop], ';');\n            }\n        }\n        return str;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var ɵ0$2 = function (hostElement, rendererType) { return document; };\n    var domRendererFactory3 = {\n        createRenderer: ɵ0$2\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    var ANIMATION_PROP_PREFIX = '@';\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var ɵ0$3 = function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    };\n    var defaultScheduler = (ɵ0$3)();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    /**\n     * A helper function that returns `true` if a given `TNode` has any matching directives.\n     */\n    function hasDirectives(tNode) {\n        return tNode.directiveEnd > tNode.directiveStart;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(undefined, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        // TODO(crisbeto): unify injectable factories with getFactory.\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        var factory = def && def.factory || getFactoryDef(typeAny);\n        return factory || null;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n            // empty\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return \"HTML\" /* Html */; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return \"Style\" /* Style */; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return \"Script\" /* Script */; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return \"URL\" /* Url */; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return \"ResourceURL\" /* ResourceUrl */; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ?\n            value.changingThisBreaksApplicationSecurity :\n            '';\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() ||\n            null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class ABC extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode && assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode && assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    /**\n     * Default size count value for a new entry in a context.\n     *\n     * A value of `1` is used here because each entry in the context has a default\n     * property.\n     */\n    var DEFAULT_SIZE_VALUE = 1;\n    var deferredBindingQueue = [];\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassBinding(context, data, element, prop, bindingIndex, value, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, stateIsPersisted(context));\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, false);\n        if (updated || forceUpdate) {\n            // We flip the bit in the bitMask to reflect that the binding\n            // at the `index` slot has changed. This identifies to the flushing\n            // phase that the bindings for this particular CSS class need to be\n            // applied again because on or more of the bindings for the CSS\n            // class have changed.\n            state.classesBitMask |= 1 << index;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleBinding(context, data, element, prop, bindingIndex, value, sanitizer, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, stateIsPersisted(context));\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        var sanitizationRequired = isMapBased ?\n            true :\n            (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired);\n        if (updated || forceUpdate) {\n            // We flip the bit in the bitMask to reflect that the binding\n            // at the `index` slot has changed. This identifies to the flushing\n            // phase that the bindings for this particular property need to be\n            // applied again because on or more of the bindings for the CSS\n            // property have changed.\n            state.stylesBitMask |= 1 << index;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     * If the binding does get registered and the `deferRegistration` flag is true then the\n     * binding data will be queued up until the context is later flushed in `applyStyling`.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired) {\n        if (!isContextLocked(context)) {\n            if (deferRegistration) {\n                deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n            else {\n                deferredBindingQueue.length && flushDeferredBindings();\n                // this will only happen during the first update pass of the\n                // context. The reason why we can't use `tNode.firstTemplatePass`\n                // here is because its not guaranteed to be true when the first\n                // update pass is executed (remember that all styling instructions\n                // are run in the update phase, and, as a result, are no more\n                // styling instructions that are run in the creation phase).\n                registerBinding(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            data[bindingIndex] = value;\n        }\n        return changed;\n    }\n    /**\n     * Schedules a binding registration to be run at a later point.\n     *\n     * The reasoning for this feature is to ensure that styling\n     * bindings are registered in the correct order for when\n     * directives/components have a super/sub class inheritance\n     * chains. Each directive's styling bindings must be\n     * registered into the context in reverse order. Therefore all\n     * bindings will be buffered in reverse order and then applied\n     * after the inheritance chain exits.\n     */\n    function deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired) {\n        deferredBindingQueue.unshift(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n    }\n    /**\n     * Flushes the collection of deferred bindings and causes each entry\n     * to be registered into the context.\n     */\n    function flushDeferredBindings() {\n        var i = 0;\n        while (i < deferredBindingQueue.length) {\n            var context = deferredBindingQueue[i++];\n            var count = deferredBindingQueue[i++];\n            var prop = deferredBindingQueue[i++];\n            var bindingIndex = deferredBindingQueue[i++];\n            var sanitizationRequired = deferredBindingQueue[i++];\n            registerBinding(context, count, prop, bindingIndex, sanitizationRequired);\n        }\n        deferredBindingQueue.length = 0;\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * This function is shared between bindings that are assigned immediately\n     * (via `updateBindingData`) and at a deferred stage. When called, it will\n     * figure out exactly where to place the binding data in the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, because they do not have a property value\n     * (since it's a map), all map-based entries are stored in an already populated area of\n     * the context at the top (which is reserved for map-based entries).\n     */\n    function registerBinding(context, countId, prop, bindingValue, sanitizationRequired) {\n        var registered = false;\n        if (prop) {\n            // prop-based bindings (e.g `<div [style.width]=\"w\" [class.foo]=\"f\">`)\n            var found = false;\n            var i = getPropValuesStartPosition(context);\n            while (i < context.length) {\n                var valuesCount = getValuesCount(context, i);\n                var p = getProp(context, i);\n                found = prop <= p;\n                if (found) {\n                    // all style/class bindings are sorted by property name\n                    if (prop < p) {\n                        allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                    }\n                    addBindingIntoContext(context, false, i, bindingValue, countId);\n                    break;\n                }\n                i += 3 /* BindingsStartOffset */ + valuesCount;\n            }\n            if (!found) {\n                allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n                addBindingIntoContext(context, false, i, bindingValue, countId);\n                registered = true;\n            }\n        }\n        else {\n            // map-based bindings (e.g `<div [style]=\"s\" [class]=\"{className:true}\">`)\n            // there is no need to allocate the map-based binding region into the context\n            // since it is already there when the context is first created.\n            addBindingIntoContext(context, true, 3 /* MapBindingsPosition */, bindingValue, countId);\n            registered = true;\n        }\n        return registered;\n    }\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        // 1,2: splice index locations\n        // 3: each entry gets a config value (guard mask + flags)\n        // 4. each entry gets a size value (which is always one because there is always a default binding\n        // value)\n        // 5. the property that is getting allocated into the context\n        // 6. the default binding value (usually `null`)\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, DEFAULT_SIZE_VALUE, prop, DEFAULT_BINDING_VALUE);\n        setGuardMask(context, index, DEFAULT_GUARD_MASK_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     *\n     * Note that this function also handles map-based bindings and will insert them\n     * at the top of the context.\n     */\n    function addBindingIntoContext(context, isMapBased, index, bindingValue, countId) {\n        var valuesCount = getValuesCount(context, index);\n        var firstValueIndex = index + 3 /* BindingsStartOffset */;\n        var lastValueIndex = firstValueIndex + valuesCount;\n        if (!isMapBased) {\n            // prop-based values all have default values, but map-based entries do not.\n            // we want to access the index for the default value in this case and not just\n            // the bindings...\n            lastValueIndex--;\n        }\n        if (typeof bindingValue === 'number') {\n            // the loop here will check to see if the binding already exists\n            // for the property in the context. Why? The reason for this is\n            // because the styling context is not \"locked\" until the first\n            // flush has occurred. This means that if a repeated element\n            // registers its styling bindings then it will register each\n            // binding more than once (since its duplicated). This check\n            // will prevent that from happening. Note that this only happens\n            // when a binding is first encountered and not each time it is\n            // updated.\n            for (var i = firstValueIndex; i <= lastValueIndex; i++) {\n                var indexAtPosition = context[i];\n                if (indexAtPosition === bindingValue)\n                    return;\n            }\n            context.splice(lastValueIndex, 0, bindingValue);\n            context[index + 1 /* ValuesCountOffset */]++;\n            // now that a new binding index has been added to the property\n            // the guard mask bit value (at the `countId` position) needs\n            // to be included into the existing mask value.\n            var guardMask = getGuardMask(context, index) | (1 << countId);\n            setGuardMask(context, index, guardMask);\n        }\n        else if (bindingValue !== null && context[lastValueIndex] == null) {\n            context[lastValueIndex] = bindingValue;\n        }\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the `stylingApply()` instruction (which is run at the very end of styling\n     * change detection) and will rely on any state values that are set from when\n     * any styling bindings update.\n     *\n     * This function may be called multiple times on the same element because it can\n     * be called from the template code as well as from host bindings. In order for\n     * styling to be successfully flushed to the element (which will only happen once\n     * despite this being called multiple times), the following criteria must be met:\n     *\n     * - `flushStyling` is called from the very last directive that has styling for\n     *    the element (see `allowStylingFlush()`).\n     * - one or more bindings for classes or styles has updated (this is checked by\n     *   examining the classes or styles bit mask).\n     *\n     * If the style and class values are successfully applied to the element then\n     * the temporary state values for the element will be cleared. Otherwise, if\n     * this did not occur then the styling state is persisted (see `state.ts` for\n     * more information on how this works).\n     */\n    function flushStyling(renderer, data, classesContext, stylesContext, element, directiveIndex, styleSanitizer) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var persistState = classesContext ? stateIsPersisted(classesContext) :\n            (stylesContext ? stateIsPersisted(stylesContext) : false);\n        var allowFlushClasses = allowStylingFlush(classesContext, directiveIndex);\n        var allowFlushStyles = allowStylingFlush(stylesContext, directiveIndex);\n        // deferred bindings are bindings which are scheduled to register with\n        // the context at a later point. These bindings can only registered when\n        // the context will be 100% flushed to the element.\n        if (deferredBindingQueue.length && (allowFlushClasses || allowFlushStyles)) {\n            flushDeferredBindings();\n        }\n        var state = getStylingState(element, persistState);\n        var classesFlushed = maybeApplyStyling(renderer, element, data, classesContext, allowFlushClasses, state.classesBitMask, setClass, null);\n        var stylesFlushed = maybeApplyStyling(renderer, element, data, stylesContext, allowFlushStyles, state.stylesBitMask, setStyle, styleSanitizer);\n        if (classesFlushed && stylesFlushed) {\n            resetStylingState();\n            if (persistState) {\n                deleteStylingStateFromStorage(element);\n            }\n        }\n        else if (persistState) {\n            storeStylingState(element, state);\n        }\n    }\n    function maybeApplyStyling(renderer, element, data, context, allowFlush, bitMask, styleSetter, styleSanitizer) {\n        if (allowFlush && context) {\n            lockAndFinalizeContext(context);\n            if (contextHasUpdates(context, bitMask)) {\n                ngDevMode && (styleSanitizer ? ngDevMode.stylesApplied++ : ngDevMode.classesApplied++);\n                applyStyling(context, renderer, element, data, bitMask, styleSetter, styleSanitizer);\n                return true;\n            }\n        }\n        return allowFlush;\n    }\n    function contextHasUpdates(context, bitMask) {\n        return context && bitMask > BIT_MASK_START_VALUE;\n    }\n    /**\n     * Locks the context (so no more bindings can be added) and also copies over initial class/style\n     * values into their binding areas.\n     *\n     * There are two main actions that take place in this function:\n     *\n     * - Locking the context:\n     *   Locking the context is required so that the style/class instructions know NOT to\n     *   register a binding again after the first update pass has run. If a locking bit was\n     *   not used then it would need to scan over the context each time an instruction is run\n     *   (which is expensive).\n     *\n     * - Patching initial values:\n     *   Directives and component host bindings may include static class/style values which are\n     *   bound to the host element. When this happens, the styling context will need to be informed\n     *   so it can use these static styling values as defaults when a matching binding is falsy.\n     *   These initial styling values are read from the initial styling values slot within the\n     *   provided `TStylingContext` (which is an instance of a `StylingMapArray`). This inner map will\n     *   be updated each time a host binding applies its static styling values (via `elementHostAttrs`)\n     *   so these values are only read at this point because this is the very last point before the\n     *   first style/class values are flushed to the element.\n     */\n    function lockAndFinalizeContext(context) {\n        if (!isContextLocked(context)) {\n            var initialValues = getStylingMapArray(context);\n            if (initialValues) {\n                updateInitialStylingOnContext(context, initialValues);\n            }\n            lockContext(context);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling_next/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * `applyClasses` and `applyStyles` to actually apply styling values).\n     */\n    function applyStyling(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = getStylingMapsSyncFn();\n        var mapsGuardMask = getGuardMask(context, 3 /* MapBindingsPosition */);\n        var applyAllValues = (bitMask & mapsGuardMask) > 0;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var valuesCount = getValuesCount(context, i);\n            var guardMask = getGuardMask(context, i);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var valuesCountUpToDefault = valuesCount - 1;\n                var defaultValue = getBindingValue(context, i, valuesCountUpToDefault);\n                // case 1: apply prop-based values\n                // try to apply the binding values and see if a non-null\n                // value gets set for the styling binding\n                for (var j = 0; j < valuesCountUpToDefault; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    var value = bindingData[bindingIndex];\n                    if (isStylingValueDefined(value)) {\n                        var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                            sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                            value;\n                        applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                        valueApplied = true;\n                        break;\n                    }\n                }\n                // case 2: apply map-based values\n                // traverse through each map-based styling binding and update all values up to\n                // the provided `prop` value. If the property was not applied in the loop above\n                // then it will be attempted to be applied in the maps sync code below.\n                if (stylingMapsSyncFn) {\n                    // determine whether or not to apply the target property or to skip it\n                    var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                        2 /* ApplyTargetProp */);\n                    var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                    valueApplied = valueApplied || valueAppliedWithinMap;\n                }\n                // case 3: apply the default value\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 3 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        // the reason why this may be `null` is either because\n        // it's a container element or it's a part of a test\n        // environment that doesn't have styling. In either\n        // case it's safe not to apply styling to the element.\n        var nativeStyle = native.style;\n        if (value) {\n            // opacity, z-index and flexbox all have number values\n            // and these need to be converted into strings so that\n            // they can be assigned properly.\n            value = value.toString();\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                (nativeStyle && nativeStyle.setProperty(prop, value));\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                (nativeStyle && nativeStyle.removeProperty(prop));\n        }\n    };\n    var ɵ0$4 = setStyle;\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (className !== '') {\n            // the reason why this may be `null` is either because\n            // it's a container element or it's a part of a test\n            // environment that doesn't have styling. In either\n            // case it's safe not to apply styling to the element.\n            var classList = native.classList;\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    (classList && classList.add(className));\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    (classList && classList.remove(className));\n            }\n        }\n    };\n    var ɵ1$1 = setClass;\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, initialStyling) {\n        // `-1` is used here because all initial styling data is not a spart\n        // of a binding (since it's static)\n        var INITIAL_STYLING_COUNT_ID = -1;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, INITIAL_STYLING_COUNT_ID, prop, value, false);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `select(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & ~1 /* ApplyAllValues */)) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, 0, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var targetPropValueWasApplied = false;\n        var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n        if (currentMapIndex < totalMaps) {\n            var bindingIndex = getBindingValue(context, 3 /* MapBindingsPosition */, currentMapIndex);\n            var stylingMapArr = data[bindingIndex];\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            while (cursor < stylingMapArr.length) {\n                var prop = getMapProp(stylingMapArr, cursor);\n                var iteratedTooFar = targetProp && prop > targetProp;\n                var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                var value = getMapValue(stylingMapArr, cursor);\n                var valueIsDefined = isStylingValueDefined(value);\n                // the recursive code is designed to keep applying until\n                // it reaches or goes past the target prop. If and when\n                // this happens then it will stop processing values, but\n                // all other map values must also catch up to the same\n                // point. This is why a recursive call is still issued\n                // even if the code has iterated too far.\n                var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                var innerProp = iteratedTooFar ? targetProp : prop;\n                var valueApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue);\n                if (iteratedTooFar) {\n                    if (!targetPropValueWasApplied) {\n                        targetPropValueWasApplied = valueApplied;\n                    }\n                    break;\n                }\n                if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                    var useDefault = isTargetPropMatched && !valueIsDefined;\n                    var valueToApply = useDefault ? defaultValue : value;\n                    var bindingIndexToApply = useDefault ? bindingIndex : null;\n                    var finalValue = sanitizer ?\n                        sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                        valueToApply;\n                    applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                    valueApplied = true;\n                }\n                targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                cursor += 2 /* TupleSize */;\n            }\n            setCurrentSyncCursor(currentMapIndex, cursor);\n            // this is a fallback case in the event that the styling map is `null` for this\n            // binding but there are other map-based bindings that need to be evaluated\n            // afterwards. If the `prop` value is falsy then the intention is to cycle\n            // through all of the properties in the remaining maps as well. If the current\n            // styling map is too short then there are no values to iterate over. In either\n            // case the follow-up maps need to be iterated over.\n            if (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp) {\n                return innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map.\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isExactMatch) {\n        var innerMode = currentMode;\n        if (!valueIsDefined && !(currentMode & 4 /* SkipTargetProp */) &&\n            (isExactMatch || (currentMode & 1 /* ApplyAllValues */))) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) > 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the {key:value} map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : [null];\n        stylingMapArr[0 /* RawValuePosition */] = newValues || null;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            if (newValues.length) {\n                props = newValues.split(/\\s+/);\n                allValuesTrue = true;\n            }\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context.\n     */\n    function attachStylingDebugObject(context) {\n        var debug = new TStylingContextDebug(context);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context) {\n            this.context = context;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"isLocked\", {\n            get: function () { return isContextLocked(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `TStylingTupleSummary`.\n             */\n            get: function () {\n                var context = this.context;\n                var entries = {};\n                var start = 3 /* MapBindingsPosition */;\n                var i = start;\n                while (i < context.length) {\n                    var valuesCount = getValuesCount(context, i);\n                    // the context may contain placeholder values which are populated ahead of time,\n                    // but contain no actual binding values. In this situation there is no point in\n                    // classifying this as an \"entry\" since no real data is stored here yet.\n                    if (valuesCount) {\n                        var prop = getProp(context, i);\n                        var guardMask = getGuardMask(context, i);\n                        var defaultValue = getDefaultValue(context, i);\n                        var sanitizationRequired = isSanitizationRequired(context, i);\n                        var bindingsStartPosition = i + 3 /* BindingsStartOffset */;\n                        var sources = [];\n                        for (var j = 0; j < valuesCount; j++) {\n                            sources.push(context[bindingsStartPosition + j]);\n                        }\n                        entries[prop] = { prop: prop, guardMask: guardMask, sanitizationRequired: sanitizationRequired, valuesCount: valuesCount, defaultValue: defaultValue, sources: sources };\n                    }\n                    i += 3 /* BindingsStartOffset */ + valuesCount;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TStylingContextDebug;\n    }());\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data, _isClassBased) {\n            this.context = context;\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n        }\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = getValuesCount(this.context, 3 /* MapBindingsPosition */) > 0;\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            applyStyling(this.context, null, mockElement, this._data, true, mapFn, sanitizer);\n        };\n        return NodeStylingDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LViewArray = ngDevMode && createNamedArrayType('LView');\n    var LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLView(list) {\n        if (LVIEW_EMPTY === undefined)\n            LVIEW_EMPTY = new LViewArray();\n        return LVIEW_EMPTY.concat(list);\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstTemplatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas) {\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstTemplatePass = firstTemplatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyMetadataStartIndex, //\n        propertyMetadataEndIndex, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyMetadataStartIndex = propertyMetadataStartIndex;\n            this.propertyMetadataEndIndex = propertyMetadataEndIndex;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 8 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 4 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 16 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 1 /* isComponent */)\n                    flags.push('TNodeFlags.isComponent');\n                if (this.flags & 32 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 2 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = ngDevMode && createNamedArrayType('TViewData');\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = ngDevMode && createNamedArrayType('LViewBlueprint');\n    var MatchesArray = ngDevMode && createNamedArrayType('MatchesArray');\n    var TViewComponents = ngDevMode && createNamedArrayType('TViewComponents');\n    var TNodeLocalNames = ngDevMode && createNamedArrayType('TNodeLocalNames');\n    var TNodeInitialInputs = ngDevMode && createNamedArrayType('TNodeInitialInputs');\n    var TNodeInitialData = ngDevMode && createNamedArrayType('TNodeInitialData');\n    var LCleanup = ngDevMode && createNamedArrayType('LCleanup');\n    var TCleanup = ngDevMode && createNamedArrayType('TCleanup');\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () { return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join(''); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () { return this._raw_lView[TVIEW]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () { return this._raw_lView[CLEANUP]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () { return this._raw_lView[INJECTOR$1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () { return this._raw_lView[RENDERER_FACTORY]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () { return this._raw_lView[RENDERER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () { return this._raw_lView[SANITIZER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_HEAD]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lView[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_TAIL]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () { return toDebug(this._raw_lView[DECLARATION_VIEW]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lView[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () { return this._raw_lView[T_HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"bindingIndex\", {\n            get: function () { return this._raw_lView[BINDING_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                var styles = isStylingContext(tNode.styles) ?\n                    new NodeStylingDebug(tNode.styles, lView) :\n                    null;\n                var classes = isStylingContext(tNode.classes) ?\n                    new NodeStylingDebug(tNode.classes, lView, true) :\n                    null;\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native, styles: styles, classes: classes,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug,\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lContainer[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Selects an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     element(0, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     select(0); // Select the <div/> created above.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param index the index of the item to act on with the following instructions\n     *\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        selectInternal(getLView(), index, getCheckNoChangesMode());\n    }\n    function selectInternal(lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = lView[TVIEW].preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = lView[TVIEW].preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵselect` instruction.\n        setSelectedIndex(index);\n    }\n\n    var ɵ0$5 = function () { return Promise.resolve(null); };\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (ɵ0$5)();\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions !== null) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            incrementActiveDirectiveId();\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // The first node is not always the one at index 0, in case of i18n, index 0 can be the\n        // instruction `i18nStart` and the first node has the index 1 or more\n        if (index === 0 || !tView.firstChild) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstTemplatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(lView, tView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        var oldView = selectView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstTemplatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstTemplatePass) {\n                tView.firstTemplatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            selectView(oldView, null);\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(lView, tView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        var oldView = selectView(lView, lView[T_HOST]);\n        var flags = lView[FLAGS];\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingRoot(lView[BINDING_INDEX] = tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 2 /* Update */, context);\n            }\n            var checkNoChangesMode = getCheckNoChangesMode();\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoChanges)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindings(tView, lView);\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            selectView(oldView, null);\n        }\n    }\n    function renderComponentOrTemplate(hostView, templateFn, context) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            var tView = hostView[TVIEW];\n            if (creationModeIsActive) {\n                renderView(hostView, tView, context);\n            }\n            refreshView(hostView, tView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        namespaceHTMLInternal();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, have an inherent ɵɵselect(0) so we don't have to generate that\n                // instruction for most update blocks\n                selectInternal(lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode);\n        invokeDirectivesHostBindings(tView, lView, tNode);\n        saveResolvedLocalsInData(lView, tNode, localRefExtractor);\n        setActiveHostElement(null);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstTemplatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas) :\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstTemplatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        -1, // propertyMetadataStartIndex: number\n        -1, // propertyMetadataEndIndex: number\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyMetadataStartIndex: -1,\n                propertyMetadataEndIndex: -1,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNode\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    /**\n                     * dataValue is an array containing runtime input or output names for the directives:\n                     * i+0: directive instance index\n                     * i+1: publicName\n                     * i+2: privateName\n                     *\n                     * e.g. [0, 'change', 'change-minified']\n                     * we want to set the reflected property with the privateName: dataValue[i+2]\n                     */\n                    for (var i = 0; i < dataValue.length; i += 3) {\n                        setNgReflectProperty(lView, element, tNode.type, dataValue[i + 2], value);\n                    }\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            ngDevMode && savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                throw createUnknownPropertyError(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw createUnknownPropertyError(propName, tNode);\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n    * Stores debugging data for this property binding on first template pass.\n    * This enables features like DebugElement.properties.\n    */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n    * Creates an error that should be thrown when encountering an unknown property on an element.\n    * @param propName Name of the invalid property.\n    * @param tNode Node on which we encountered the error.\n    */\n    function createUnknownPropertyError(propName, tNode) {\n        return new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstTemplatePass(tView);\n        if (!getBindingsEnabled())\n            return;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries) {\n                    tNode.flags |= 4 /* hasContentQuery */;\n                }\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, tNode, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var selectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                    // Each directive gets a uniqueId value that is the same for both\n                    // create and update calls when the hostBindings function is called. The\n                    // directive uniqueId is not set anywhere--it is just incremented between\n                    // each hostBindings call and is useful for helping instruction code\n                    // uniquely determine which directive is currently active when executed.\n                    incrementActiveDirectiveId();\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(lView, hostTNode, directive, def, directiveDefIdx) {\n        postProcessBaseDirective(lView, hostTNode, directive);\n        if (hostTNode.attrs !== null) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, hostTNode);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(hostTNode.index, lView);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, hostTNode, directive) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(hostTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        hostTNode.flags = 1 /* isComponent */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def) {\n        tView.data.push(def);\n        var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[hostTNode.index], hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        componentView[T_HOST] = hostTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var lView = getLView();\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = ngDevMode ? new TNodeInitialInputs() : []);\n        // Ensure that we don't create sparse arrays\n        for (var i_1 = initialInputData.length; i_1 <= directiveIndex; i_1++) {\n            initialInputData.push(null);\n        }\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] ||\n                    (initialInputData[directiveIndex] = ngDevMode ? new TNodeInitialData() : []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ngDevMode && createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            if (isLContainer(viewOrContainer) && viewOrContainer[ACTIVE_INDEX] === -1) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    refreshView(embeddedLView, embeddedTView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var tView = componentView[TVIEW];\n            refreshView(componentView, tView, tView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentViewByIndex(componentHostIdx, hostLView);\n        syncViewWithBlueprint(componentView);\n        renderView(componentView, componentView[TVIEW], componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            var tView = view[TVIEW];\n            refreshView(view, tView, tView.template, context);\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        var view = getComponentViewByInstance(component);\n        checkNoChangesInternal(view, component);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n        }\n        return tNode.inputs;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode) {\n        renderStylingMap(renderer, native, tNode.classes, true);\n        renderStylingMap(renderer, native, tNode.styles, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        applyView(lView[RENDERER], 2 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        var declaredViews = declarationContainer[MOVED_VIEWS];\n        if (declaredViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            declaredViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var projectedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = projectedViews.indexOf(lView);\n        projectedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(renderer, 3 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null && (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 2 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            ngDevMode && assertDefined(lView[T_HOST], 'Missing Host TNode');\n            var tViewNodeChild = lView[T_HOST].child;\n            return tViewNodeChild !== null ? getNativeByTNodeOrNull(tViewNodeChild, lView) :\n                lContainer[NATIVE];\n        }\n        else {\n            return lContainer[NATIVE];\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 2 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 32 /* isDetached */) !== 32 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNodeOrNull(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, isPipe) {\n        if (isComponent(hostTNode) && !isPipe) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, null, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var ɵ0$6 = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$7 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$7 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$8 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$8 });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$9 = function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); };\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, ɵ0$9);\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an ngInjectableDef directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n        if (factory !== null) {\n            return factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its ngInjectorDef.\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an ngInjectableDef and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an ngInjectableDef\n        // from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__PRE_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var ɵ0$a = IDENT;\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var ɵ1$2 = MULTI_PROVIDER_FN;\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    var ɵ0$b = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    };\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', ɵ0$b, Query);\n    var ɵ1$3 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    };\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', ɵ1$3, Query);\n    var ɵ2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', ɵ2, Query);\n    var ɵ3 = function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', ɵ3, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindReconciledValue = bind(lView, value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, bindReconciledValue, sanitizer);\n        }\n        return ɵɵproperty;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param lView Current view\n     * @param value Value to diff\n     */\n    function bind(lView, value) {\n        var bindingIndex = lView[BINDING_INDEX]++;\n        ngDevMode && storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            elementAttributeInternal(index, name, bound, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        ngDevMode && storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        if (ngDevMode) {\n            // Only set static strings the first time (data will be null subsequent runs).\n            var data = storeBindingMetadata(lView, prefix, suffix);\n            if (data) {\n                lView[TVIEW].data[bindingIndex] = i0;\n            }\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        if (ngDevMode) {\n            // Only set static strings the first time (data will be null subsequent runs).\n            var data = storeBindingMetadata(lView, prefix, suffix);\n            if (data) {\n                var tData = lView[TVIEW].data;\n                tData[bindingIndex] = i0;\n                tData[bindingIndex + 1] = i1;\n            }\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        if (ngDevMode) {\n            // Only set static strings the first time (data will be null subsequent runs).\n            var data = storeBindingMetadata(lView, prefix, suffix);\n            if (data) {\n                var tData = lView[TVIEW].data;\n                tData[bindingIndex] = i0;\n                tData[bindingIndex + 1] = i1;\n                tData[bindingIndex + 2] = i2;\n            }\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        if (ngDevMode) {\n            // Only set static strings the first time (data will be null subsequent runs).\n            var data = storeBindingMetadata(lView, prefix, suffix);\n            if (data) {\n                var tData = lView[TVIEW].data;\n                tData[bindingIndex] = i0;\n                tData[bindingIndex + 1] = i1;\n                tData[bindingIndex + 2] = i2;\n                tData[bindingIndex + 3] = i3;\n            }\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        if (ngDevMode) {\n            // Only set static strings the first time (data will be null subsequent runs).\n            var data = storeBindingMetadata(lView, prefix, suffix);\n            if (data) {\n                var tData = lView[TVIEW].data;\n                tData[bindingIndex] = i0;\n                tData[bindingIndex + 1] = i1;\n                tData[bindingIndex + 2] = i2;\n                tData[bindingIndex + 3] = i3;\n                tData[bindingIndex + 4] = i4;\n            }\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        if (ngDevMode) {\n            // Only set static strings the first time (data will be null subsequent runs).\n            var data = storeBindingMetadata(lView, prefix, suffix);\n            if (data) {\n                var tData = lView[TVIEW].data;\n                tData[bindingIndex] = i0;\n                tData[bindingIndex + 1] = i1;\n                tData[bindingIndex + 2] = i2;\n                tData[bindingIndex + 3] = i3;\n                tData[bindingIndex + 4] = i4;\n                tData[bindingIndex + 5] = i5;\n            }\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        if (ngDevMode) {\n            // Only set static strings the first time (data will be null subsequent runs).\n            var data = storeBindingMetadata(lView, prefix, suffix);\n            if (data) {\n                var tData = lView[TVIEW].data;\n                tData[bindingIndex] = i0;\n                tData[bindingIndex + 1] = i1;\n                tData[bindingIndex + 2] = i2;\n                tData[bindingIndex + 3] = i3;\n                tData[bindingIndex + 4] = i4;\n                tData[bindingIndex + 5] = i5;\n                tData[bindingIndex + 6] = i6;\n            }\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs || null);\n            var embeddedTView = tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas);\n            var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n            embeddedTViewNode.injectorIndex = tContainerNode.injectorIndex;\n            embeddedTView.node = embeddedTViewNode;\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tContainerNode, localRefExtractor);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        if (!getCheckNoChangesMode()) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * This function is executed during the creation block of an element.\n     * Because the existing styling implementation issues a call to the\n     * `styling()` instruction, this instruction will also get run. The\n     * central idea here is that the directive index values are bound\n     * into the context. The directive index is temporary and is only\n     * required until the `select(n)` instruction is fully functional.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyling() {\n        var tView = getLView()[TVIEW];\n        if (tView.firstTemplatePass) {\n            updateLastDirectiveIndex$1(getPreviousOrParentTNode(), getActiveDirectiveStylingIndex());\n        }\n    }\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `select(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = _stylingProp(elementIndex, bindingIndex, prop, resolveStylePropValue(value, suffix), false, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = _stylingProp(getSelectedIndex(), bindingIndex, className, value, true, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     */\n    function _stylingProp(elementIndex, bindingIndex, prop, value, isClassBased, defer) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var updated = false;\n        if (value !== NO_CHANGE) {\n            if (isClassBased) {\n                updated = updateClassBinding(getClassesContext(tNode), lView, native, prop, bindingIndex, value, defer, false);\n            }\n            else {\n                var sanitizer = getCurrentStyleSanitizer();\n                updated = updateStyleBinding(getStylesContext(tNode), lView, native, prop, bindingIndex, value, sanitizer, defer, false);\n            }\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var context = getStylesContext(tNode);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directiveIndex && hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false);\n            styles = NO_CHANGE;\n        }\n        var updated = _stylingMap(index, context, bindingIndex, styles, false, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.styleMap++;\n            if (updated) {\n                ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var context = getClassesContext(tNode);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directiveIndex && hasClassInput(tNode) && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true);\n            classes = NO_CHANGE;\n        }\n        var updated = _stylingMap(elementIndex, context, bindingIndex, classes, true, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.classMap++;\n            if (updated) {\n                ngDevMode.classMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function _stylingMap(elementIndex, context, bindingIndex, value, isClassBased, defer) {\n        activateStylingMapFeature();\n        var lView = getLView();\n        var valueHasChanged = false;\n        if (value !== NO_CHANGE) {\n            var tNode = getTNode(elementIndex, lView);\n            var native = getNativeByTNode(tNode, lView);\n            var oldValue = lView[bindingIndex];\n            valueHasChanged = hasValueChanged(oldValue, value);\n            var stylingMapArr = normalizeIntoStylingMap(oldValue, value, !isClassBased);\n            if (isClassBased) {\n                updateClassBinding(context, lView, native, null, bindingIndex, stylingMapArr, defer, valueHasChanged);\n            }\n            else {\n                var sanitizer = getCurrentStyleSanitizer();\n                updateStyleBinding(context, lView, native, null, bindingIndex, stylingMapArr, sanitizer, defer, valueHasChanged);\n            }\n        }\n        return valueHasChanged;\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass--\n     *    which is when the context is not locked yet)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased) {\n        var oldValue = lView[bindingIndex];\n        if (oldValue !== newValue) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (newValue || isContextLocked(context)) {\n                var inputs = tNode.inputs[isClassBased ? 'class' : 'style'];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n            }\n            lView[bindingIndex] = newValue;\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length > 0) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be called from the template and hostBindings\n     * functions and may be called multiple times depending whether multiple\n     * sources of styling exist. If called multiple times, only the last call\n     * to `stlyingApply()` will render styling to the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstylingApply() {\n        var elementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var renderer = getRenderer(tNode, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        var sanitizer = getCurrentStyleSanitizer();\n        flushStyling(renderer, lView, getClassesContext(tNode), getStylesContext(tNode), native, directiveIndex, sanitizer);\n        setCurrentStyleSanitizer(null);\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || [''];\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || [''];\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getActiveDirectiveStylingIndex() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n    /**\n     * Temporary function that will update the max directive index value in\n     * both the classes and styles contexts present on the provided `tNode`.\n     *\n     * This code is only used because the `select(n)` code functionality is not\n     * yet 100% functional. The `select(n)` instruction cannot yet evaluate host\n     * bindings function code in sync with the associated template function code.\n     * For this reason the styling algorithm needs to track the last directive index\n     * value so that it knows exactly when to render styling to the element since\n     * `stylingApply()` is called multiple times per CD (`stylingApply` will be\n     * removed once `select(n)` is fixed).\n     */\n    function updateLastDirectiveIndex$1(tNode, directiveIndex) {\n        updateLastDirectiveIndex(getClassesContext(tNode), directiveIndex);\n        updateLastDirectiveIndex(getStylesContext(tNode), directiveIndex);\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            context = allocTStylingContext(context);\n            if (ngDevMode) {\n                attachStylingDebugObject(context);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a string value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not a style/class binding update should be applied later.\n     *\n     * This function will decide whether a binding should be applied immediately\n     * or later (just before the styles/classes are flushed to the element). The\n     * reason why this feature exists is because of super/sub directive inheritance.\n     * Angular will evaluate host bindings on the super directive first and the sub\n     * directive, but the styling bindings on the sub directive are of higher priority\n     * than the super directive. For this reason all styling bindings that take place\n     * in this circumstance will need to be deferred until later so that they can be\n     * applied together and in a different order (the algorithm handles that part).\n     */\n    function deferStylingUpdate() {\n        return getActiveDirectiveSuperClassHeight() > 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var renderer = lView[RENDERER];\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name, renderer, getNamespace());\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs || null);\n        if (attrs != null) {\n            var lastAttrIndex = setUpAttributes(renderer, native, attrs);\n            if (tView.firstTemplatePass) {\n                registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n            }\n        }\n        renderInitialStyling(renderer, native, tNode);\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tNode);\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        registerPostOrderHooks(tView, previousOrParentTNode);\n        decreaseElementDepthCount();\n        if (tView.firstTemplatePass && tView.queries !== null &&\n            isContentQueryHost(previousOrParentTNode)) {\n            tView.queries.elementEnd(previousOrParentTNode);\n        }\n        if (hasClassInput(tNode) && tNode.classes) {\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs['class']);\n        }\n        if (hasStyleInput(tNode) && tNode.styles) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrs, localRefs) {\n        ɵɵelementStart(index, name, attrs, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstTemplatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = getInitialStylingValue(context) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, attrs || null);\n        if (attrs && tView.firstTemplatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tNode);\n        attachPatchData(native, lView);\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        registerPostOrderHooks(tView, previousOrParentTNode);\n        if (tView.firstTemplatePass && tView.queries !== null &&\n            isContentQueryHost(previousOrParentTNode)) {\n            tView.queries.elementEnd(previousOrParentTNode);\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrs, localRefs) {\n        ɵɵelementContainerStart(index, attrs, localRefs);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            selectView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            selectView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(lView, tView, context); // creation mode pass\n        }\n        refreshView(lView, tView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        selectView(lContainer[PARENT], null);\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && hasDirectives(tNode)) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener at the head of the coalesced listeners list.\n                    listenerFn.__ngNextListenerFn__ = existingListener.__ngNextListenerFn__;\n                    existingListener.__ngNextListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(lView, tProjectionNode);\n        }\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var interpolatedValue = interpolation1(getLView(), prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var interpolatedValue = interpolation2(getLView(), prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var interpolatedValue = interpolation3(getLView(), prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var interpolatedValue = interpolation4(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var interpolatedValue = interpolation5(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var interpolatedValue = interpolation6(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var interpolatedValue = interpolation7(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var interpolatedValue = interpolation8(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var interpolatedValue = interpolationV(getLView(), values);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        ngDevMode && ngDevMode.rendererSetText++;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param value Stringified value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtextBinding(value) {\n        var lView = getLView();\n        var index = getSelectedIndex();\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            textBindingInternal(lView, index, renderStringify(bound));\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var lView = getLView();\n        var bindReconciledValue = bind(lView, value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer, true);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        // TODO(benlesh): remove bind call here.\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bound, sanitizer, true, loadComponentRenderer);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$c = function (token, notFoundValue) {\n        throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n    };\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: ɵ0$c\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(-1, null, 1, 0, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = selectView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootView, rootTView, null);\n            // update mode pass\n            refreshView(rootView, rootTView, null, null);\n        }\n        finally {\n            selectView(oldView, null);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                // because inheritance is unknown during compile time, the runtime code\n                // needs to be informed of the super-class depth so that instruction code\n                // can distinguish one host bindings function from another. The reason why\n                // relying on the directive uniqueId exclusively is not enough is because the\n                // uniqueId value and the directive instance stay the same between hostBindings\n                // calls throughout the directive inheritance chain. This means that without\n                // a super-class depth value, there is no way to know whether a parent or\n                // sub-class host bindings function is currently being executed.\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    // The reason why we increment first and then decrement is so that parent\n                    // hostBindings calls have a higher id value compared to sub-class hostBindings\n                    // calls (this way the leaf directive is always at a super-class depth of 0).\n                    adjustActiveDirectiveSuperClassDepthPosition(1);\n                    try {\n                        superHostBindings(rf, ctx, elementIndex);\n                    }\n                    finally {\n                        adjustActiveDirectiveSuperClassDepthPosition(-1);\n                    }\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵselect(0);\n     *        ɵɵtextBinding(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ngInjectableDef = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-next.4');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    var ɵ0$d = trackByIdentity;\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            // Ensure that the namespace for the root node is correct,\n            // otherwise the browser might not render out the element properly.\n            namespaceHTMLInternal();\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(-1, null, 1, 0, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = selectView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootLView, rootTView, null);\n            }\n            finally {\n                selectView(oldLView, null);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n        var match = LOCALE_DATA[normalizedLocale];\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = LOCALE_DATA[parentLocale];\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(viewData, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(lView, tNode);\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, lView), tNode, lView);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, lView);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData, /* markAsDetached */ true);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(viewData, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, viewData);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, viewData);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(nodeIndex_1, viewData, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData, markAsDetached) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 32 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var lView = getLView();\n                        elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        // Check if that attribute is a directive input\n                        var tNode = getTNode(previousElementIndex, lView);\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        var expression = bind(lView, value);\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    var TRANSLATIONS = {};\n    /**\n     * Set the configuration for `i18nLocalize`.\n     *\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function i18nConfigureLocalize(options) {\n        if (options === void 0) { options = {\n            translations: {}\n        }; }\n        TRANSLATIONS = options.translations;\n    }\n    var LOCALIZE_PH_REGEXP = /\\{\\$(.*?)\\}/g;\n    /**\n     * A goog.getMsg-like function for users that do not use Closure.\n     *\n     * This method is required as a *temporary* measure to prevent i18n tests from being blocked while\n     * running outside of Closure Compiler. This method will not be needed once runtime translation\n     * service support is introduced.\n     *\n     * @codeGenApi\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function ɵɵi18nLocalize(input, placeholders) {\n        if (typeof TRANSLATIONS[input] !== 'undefined') { // to account for empty string\n            input = TRANSLATIONS[input];\n        }\n        if (placeholders !== undefined && Object.keys(placeholders).length) {\n            return input.replace(LOCALIZE_PH_REGEXP, function (_, key) { return placeholders[key] || ''; });\n        }\n        return input;\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ngModuleDef.id !== null) {\n            var id = ngModuleType.ngModuleDef.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ngModuleDef.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearModulesForTest() {\n        modules.clear();\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode(lView) ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n        var pipeInstance = pipeFactory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            collectQueryResults(embeddedLViews[i_2], childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$e = function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyling': ɵɵstyling,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵstylingApply': ɵɵstylingApply,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextBinding': ɵɵtextBinding,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵi18nLocalize': ɵɵi18nLocalize,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); };\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (ɵ0$e)();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        var ngFactoryDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var compiler = getCompilerFacade();\n                    var meta = getComponentMetadata(compiler, type, metadata);\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/ngFactory.js\", meta.metadata);\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    var compiler = getCompilerFacade();\n                    var meta = getComponentMetadata(compiler, type, metadata);\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, meta.templateUrl, meta.metadata);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so components are reachable through the module injector by default\n        // This is mostly to support injecting components in tests. In real application code,\n        // components should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function getComponentMetadata(compiler, type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            var error_1 = [\"Component '\" + type.name + \"' is not resolved:\"];\n            if (metadata.templateUrl) {\n                error_1.push(\" - templateUrl: \" + metadata.templateUrl);\n            }\n            if (metadata.styleUrls && metadata.styleUrls.length) {\n                error_1.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n            }\n            error_1.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n            throw new Error(error_1.join('\\n'));\n        }\n        var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n        var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n        if (meta.usesInheritance) {\n            addBaseDefToUndecoratedParents(type);\n        }\n        return { metadata: meta, templateUrl: templateUrl };\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngFactoryDef = getCompilerFacade().compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/ngFactory.js\", meta.metadata);\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngDirectiveDef =\n                        getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so directives are reachable through the module injector by default\n        // This is mostly to support injecting directives in tests. In real application code,\n        // directives should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function getDirectiveMetadata(type, metadata) {\n        var name = type && type.name;\n        var sourceMapUrl = \"ng:///\" + name + \"/ngDirectiveDef.js\";\n        var compiler = getCompilerFacade();\n        var facade = directiveMetadata(type, metadata);\n        facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n        if (facade.usesInheritance) {\n            addBaseDefToUndecoratedParents(type);\n        }\n        return { metadata: facade, sourceMapUrl: sourceMapUrl };\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, type: type, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngFactoryDef = getCompilerFacade().compileFactory(angularCoreEnv, \"ng:///\" + metadata.name + \"/ngFactory.js\", metadata, true);\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + metadata.name + \"/ngPipeDef.js\", metadata);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getPipeMetadata(type, meta) {\n        return {\n            type: type,\n            typeArgumentCount: 0,\n            name: type.name,\n            deps: reflectDependencies(type),\n            pipeName: meta.name,\n            pure: meta.pure !== undefined ? meta.pure : true\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$f = function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, ɵ1$4 = function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); };\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', ɵ0$f, undefined, undefined, ɵ1$4);\n    var ɵ2$1 = function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, ɵ3$1 = function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); };\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', ɵ2$1, Directive, undefined, ɵ3$1);\n    var ɵ4 = function (p) { return (__assign({ pure: true }, p)); }, ɵ5 = function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', ɵ4, undefined, undefined, ɵ5);\n    var ɵ6 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', ɵ6);\n    var ɵ7 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', ɵ7);\n    var ɵ8 = function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', ɵ8);\n    var ɵ9 = function (eventName, args) { return ({ eventName: eventName, args: args }); };\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', ɵ9);\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$g = function (ngModule) { return ngModule; }, ɵ1$5 = \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', ɵ0$g, undefined, undefined, ɵ1$5);\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS$1 = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                if (ivyEnabled) {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () {\n                try {\n                    var context = loadLContext(this.nativeNode);\n                    var lView = context.lView;\n                    var tData = lView[TVIEW].data;\n                    var tNode = tData[context.nodeIndex];\n                    return tNode.tagName;\n                }\n                catch (e) {\n                    return this.nativeNode.nodeName;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                var output = __assign({}, properties, hostProperties);\n                if (className) {\n                    output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n                }\n                return output;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element);\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, false);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, true);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _getStylingDebugInfo(element, isClassBased) {\n        if (element) {\n            var context = loadLContextFromNode(element);\n            var lView = context.lView;\n            var tData = lView[TVIEW].data;\n            var tNode = tData[context.nodeIndex];\n            if (isClassBased) {\n                return isStylingContext(tNode.classes) ?\n                    new NodeStylingDebug(tNode.classes, lView, true).values :\n                    stylingMapToStringMap(tNode.classes);\n            }\n            else {\n                return isStylingContext(tNode.styles) ?\n                    new NodeStylingDebug(tNode.styles, lView, false).values :\n                    stylingMapToStringMap(tNode.styles);\n            }\n        }\n        return {};\n    }\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponent(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = void 0;\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value = (value || '') + renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value = value === undefined ? lView[bindingIndex] : value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings), if they're defined.\n                // Avoid wrapping for normal bindings so that the value doesn't get cast to a string.\n                properties[propertyName] = (metadataParts[1] && metadataParts[2]) ?\n                    metadataParts[1] + value + metadataParts[2] :\n                    value;\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        if (locale) {\n            if (ivyEnabled) {\n                setLocaleId(locale);\n            }\n            return locale;\n        }\n        // Use `goog.LOCALE` as default value for `LOCALE_ID` token for Closure Compiler.\n        // Note: default `goog.LOCALE` value is `en`, when Angular used `en-US`. In order to preserve\n        // backwards compatibility, we use Angular default value over Closure Compiler's one.\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            if (ivyEnabled) {\n                setLocaleId(goog.LOCALE);\n            }\n            return goog.LOCALE;\n        }\n        return DEFAULT_LOCALE_ID;\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_s = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_a = isForwardRef;\n    exports.ɵangular_packages_core_core_c = NullInjector;\n    exports.ɵangular_packages_core_core_b = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = SCHEDULER;\n    exports.ɵangular_packages_core_core_bc = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bd = getLView;\n    exports.ɵangular_packages_core_core_be = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bf = nextContextImpl;\n    exports.ɵangular_packages_core_core_bn = getRootContext;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_bh = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bm = noSideEffects;\n    exports.ɵangular_packages_core_core_bi = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bj = makePropDecorator;\n    exports.ɵangular_packages_core_core_bk = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS$1;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.ɵ0 = ɵ0;\n    exports.ɵ1 = ɵ1;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵLOCALE_DATA = LOCALE_DATA;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵstyling = ɵɵstyling;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵstylingApply = ɵɵstylingApply;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵtextBinding = ɵɵtextBinding;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵi18nConfigureLocalize = i18nConfigureLocalize;\n    exports.ɵɵi18nLocalize = ɵɵi18nLocalize;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}