{"version":3,"sources":["F:/Test/Angular Version/angular-9/node_modules/ngx-json-viewer/ngx-json-viewer.es5.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cAmGM;;KAED,AAOH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CAYG;;KAEA,AAaH","file":"ngx-json-viewer.es5.js","sourcesContent":["import { Component, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nvar NgxJsonViewerComponent = /** @class */ (function () {\n    function NgxJsonViewerComponent() {\n        this.expanded = true;\n        /**\n         * @deprecated It will be always true and deleted in version 3.0.0\n         */\n        this.cleanOnChange = true;\n        this.segments = [];\n    }\n    /**\n     * @return {?}\n     */\n    NgxJsonViewerComponent.prototype.ngOnChanges = function () {\n        var _this = this;\n        if (this.cleanOnChange) {\n            this.segments = [];\n        }\n        if (typeof this.json === 'object') {\n            Object.keys(this.json).forEach(function (key) {\n                _this.segments.push(_this.parseKeyValue(key, _this.json[key]));\n            });\n        }\n        else {\n            this.segments.push(this.parseKeyValue(\"(\" + typeof this.json + \")\", this.json));\n        }\n    };\n    /**\n     * @param {?} segment\n     * @return {?}\n     */\n    NgxJsonViewerComponent.prototype.isExpandable = function (segment) {\n        return segment.type === 'object' || segment.type === 'array';\n    };\n    /**\n     * @param {?} segment\n     * @return {?}\n     */\n    NgxJsonViewerComponent.prototype.toggle = function (segment) {\n        if (this.isExpandable(segment)) {\n            segment.expanded = !segment.expanded;\n        }\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    NgxJsonViewerComponent.prototype.parseKeyValue = function (key, value) {\n        var /** @type {?} */ segment = {\n            key: key,\n            value: value,\n            type: undefined,\n            description: '' + value,\n            expanded: this.expanded\n        };\n        switch (typeof segment.value) {\n            case 'number': {\n                segment.type = 'number';\n                break;\n            }\n            case 'boolean': {\n                segment.type = 'boolean';\n                break;\n            }\n            case 'function': {\n                segment.type = 'function';\n                break;\n            }\n            case 'string': {\n                segment.type = 'string';\n                segment.description = '\"' + segment.value + '\"';\n                break;\n            }\n            case 'undefined': {\n                segment.type = 'undefined';\n                segment.description = 'undefined';\n                break;\n            }\n            case 'object': {\n                // yea, null is object\n                if (segment.value === null) {\n                    segment.type = 'null';\n                    segment.description = 'null';\n                }\n                else if (Array.isArray(segment.value)) {\n                    segment.type = 'array';\n                    segment.description = 'Array[' + segment.value.length + '] ' + JSON.stringify(segment.value);\n                }\n                else if (segment.value instanceof Date) {\n                    segment.type = 'date';\n                }\n                else {\n                    segment.type = 'object';\n                    segment.description = 'Object ' + JSON.stringify(segment.value);\n                }\n                break;\n            }\n        }\n        return segment;\n    };\n    return NgxJsonViewerComponent;\n}());\nNgxJsonViewerComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'ngx-json-viewer',\n                template: \"\\n    <section class=\\\"ngx-json-viewer\\\">\\n      <section\\n        *ngFor=\\\"let segment of segments\\\"\\n        [ngClass]=\\\"['segment', 'segment-type-' + segment.type]\\\">\\n        <section\\n          (click)=\\\"toggle(segment)\\\"\\n          [ngClass]=\\\"{\\n            'segment-main': true,\\n            'expandable': isExpandable(segment),\\n            'expanded': segment.expanded\\n          }\\\">\\n          <div *ngIf=\\\"isExpandable(segment)\\\" class=\\\"toggler\\\"></div>\\n          <span class=\\\"segment-key\\\">{{ segment.key }}</span>\\n          <span class=\\\"segment-separator\\\">: </span>\\n          <span *ngIf=\\\"!segment.expanded || !isExpandable(segment)\\\" class=\\\"segment-value\\\">{{ segment.description }}</span>\\n        </section>\\n        <section *ngIf=\\\"segment.expanded && isExpandable(segment)\\\" class=\\\"children\\\">\\n          <ngx-json-viewer [json]=\\\"segment.value\\\" [expanded]=\\\"expanded\\\"></ngx-json-viewer>\\n        </section>\\n      </section>\\n    </section>\\n  \",\n                styles: [\"\\n    @charset \\\"UTF-8\\\";\\n    .ngx-json-viewer {\\n      font-family: monospace;\\n      font-size: 1em;\\n      width: 100%;\\n      height: 100%;\\n      overflow: hidden;\\n      position: relative; }\\n      .ngx-json-viewer .segment {\\n        padding: 2px;\\n        margin: 1px 1px 1px 12px; }\\n        .ngx-json-viewer .segment .segment-main {\\n          word-wrap: break-word; }\\n          .ngx-json-viewer .segment .segment-main .toggler {\\n            position: absolute;\\n            margin-left: -14px;\\n            margin-top: 3px;\\n            font-size: .8em;\\n            line-height: 1.2em;\\n            vertical-align: middle;\\n            color: #787878; }\\n            .ngx-json-viewer .segment .segment-main .toggler::after {\\n              display: inline-block;\\n              content: \\\"\\u25BA\\\";\\n              -webkit-transition: -webkit-transform 0.1s ease-in;\\n              transition: -webkit-transform 0.1s ease-in;\\n              transition: transform 0.1s ease-in;\\n              transition: transform 0.1s ease-in, -webkit-transform 0.1s ease-in; }\\n          .ngx-json-viewer .segment .segment-main .segment-key {\\n            color: #4E187C; }\\n          .ngx-json-viewer .segment .segment-main .segment-separator {\\n            color: #999; }\\n          .ngx-json-viewer .segment .segment-main .segment-value {\\n            color: #000; }\\n        .ngx-json-viewer .segment .children {\\n          margin-left: 12px; }\\n      .ngx-json-viewer .segment-type-string > .segment-main > .segment-value {\\n        color: #FF6B6B; }\\n      .ngx-json-viewer .segment-type-number > .segment-main > .segment-value {\\n        color: #009688; }\\n      .ngx-json-viewer .segment-type-boolean > .segment-main > .segment-value {\\n        color: #b938a4; }\\n      .ngx-json-viewer .segment-type-date > .segment-main > .segment-value {\\n        color: #05668D; }\\n      .ngx-json-viewer .segment-type-array > .segment-main > .segment-value {\\n        color: #999; }\\n      .ngx-json-viewer .segment-type-object > .segment-main > .segment-value {\\n        color: #999; }\\n      .ngx-json-viewer .segment-type-function > .segment-main > .segment-value {\\n        color: #999; }\\n      .ngx-json-viewer .segment-type-null > .segment-main > .segment-value {\\n        color: #fff; }\\n      .ngx-json-viewer .segment-type-undefined > .segment-main > .segment-value {\\n        color: #fff; }\\n      .ngx-json-viewer .segment-type-null > .segment-main > .segment-value {\\n        background-color: red; }\\n      .ngx-json-viewer .segment-type-undefined > .segment-main > .segment-key {\\n        color: #999; }\\n      .ngx-json-viewer .segment-type-undefined > .segment-main > .segment-value {\\n        background-color: #999; }\\n      .ngx-json-viewer .segment-type-object > .segment-main,\\n      .ngx-json-viewer .segment-type-array > .segment-main {\\n        white-space: nowrap; }\\n      .ngx-json-viewer .expanded > .toggler::after {\\n        -webkit-transform: rotate(90deg);\\n                transform: rotate(90deg); }\\n      .ngx-json-viewer .expandable,\\n      .ngx-json-viewer .expandable > .toggler {\\n        cursor: pointer; }\\n  \"]\n            },] },\n];\n/**\n * @nocollapse\n */\nNgxJsonViewerComponent.ctorParameters = function () { return []; };\nNgxJsonViewerComponent.propDecorators = {\n    'json': [{ type: Input },],\n    'expanded': [{ type: Input },],\n    'cleanOnChange': [{ type: Input },],\n};\nvar NgxJsonViewerModule = /** @class */ (function () {\n    function NgxJsonViewerModule() {\n    }\n    return NgxJsonViewerModule;\n}());\nNgxJsonViewerModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule\n                ],\n                declarations: [\n                    NgxJsonViewerComponent\n                ],\n                exports: [\n                    NgxJsonViewerComponent\n                ]\n            },] },\n];\n/**\n * @nocollapse\n */\nNgxJsonViewerModule.ctorParameters = function () { return []; };\n/**\n * Generated bundle index. Do not edit.\n */\nexport { NgxJsonViewerModule, NgxJsonViewerComponent };\n"]}