{"version":3,"sources":["F:/Test/Angular Version/angular-9/libs/ng2-ace-editor/src/component.js"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4DA0P4D,AAUjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4DAEgB","file":"component.js","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, EventEmitter, Output, ElementRef, Input, forwardRef, NgZone } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport \"brace\";\nimport \"brace/theme/monokai\";\nvar AceEditorComponent = /** @class */ (function () {\n    function AceEditorComponent(elementRef, zone) {\n        var _this = this;\n        this.zone = zone;\n        this.textChanged = new EventEmitter();\n        this.textChange = new EventEmitter();\n        this.style = {};\n        this._options = {};\n        this._readOnly = false;\n        this._theme = \"monokai\";\n        this._mode = \"html\";\n        this._autoUpdateContent = true;\n        this._durationBeforeCallback = 0;\n        this._text = \"\";\n        this._onChange = function (_) {\n        };\n        this._onTouched = function () {\n        };\n        var el = elementRef.nativeElement;\n        this.zone.runOutsideAngular(function () {\n            _this._editor = ace['edit'](el);\n        });\n        this._editor.$blockScrolling = Infinity;\n    }\n    AceEditorComponent_1 = AceEditorComponent;\n    AceEditorComponent.prototype.ngOnInit = function () {\n        this.init();\n        this.initEvents();\n    };\n    AceEditorComponent.prototype.ngOnDestroy = function () {\n        this._editor.destroy();\n    };\n    AceEditorComponent.prototype.init = function () {\n        this.setOptions(this._options || {});\n        this.setTheme(this._theme);\n        this.setMode(this._mode);\n        this.setReadOnly(this._readOnly);\n    };\n    AceEditorComponent.prototype.initEvents = function () {\n        var _this = this;\n        this._editor.on('change', function () { return _this.updateText(); });\n        this._editor.on('paste', function () { return _this.updateText(); });\n    };\n    AceEditorComponent.prototype.updateText = function () {\n        var _this = this;\n        var newVal = this._editor.getValue();\n        if (newVal === this.oldText) {\n            return;\n        }\n        if (!this._durationBeforeCallback) {\n            this._text = newVal;\n            this.zone.run(function () {\n                _this.textChange.emit(newVal);\n                _this.textChanged.emit(newVal);\n            });\n            this._onChange(newVal);\n        }\n        else {\n            if (this.timeoutSaving) {\n                clearTimeout(this.timeoutSaving);\n            }\n            this.timeoutSaving = setTimeout(function () {\n                _this._text = newVal;\n                _this.zone.run(function () {\n                    _this.textChange.emit(newVal);\n                    _this.textChanged.emit(newVal);\n                });\n                _this.timeoutSaving = null;\n            }, this._durationBeforeCallback);\n        }\n        this.oldText = newVal;\n    };\n    Object.defineProperty(AceEditorComponent.prototype, \"options\", {\n        set: function (options) {\n            this.setOptions(options);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AceEditorComponent.prototype.setOptions = function (options) {\n        this._options = options;\n        this._editor.setOptions(options || {});\n    };\n    Object.defineProperty(AceEditorComponent.prototype, \"readOnly\", {\n        set: function (readOnly) {\n            this.setReadOnly(readOnly);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AceEditorComponent.prototype.setReadOnly = function (readOnly) {\n        this._readOnly = readOnly;\n        this._editor.setReadOnly(readOnly);\n    };\n    Object.defineProperty(AceEditorComponent.prototype, \"theme\", {\n        set: function (theme) {\n            this.setTheme(theme);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AceEditorComponent.prototype.setTheme = function (theme) {\n        this._theme = theme;\n        this._editor.setTheme(\"ace/theme/\" + theme);\n    };\n    Object.defineProperty(AceEditorComponent.prototype, \"mode\", {\n        set: function (mode) {\n            this.setMode(mode);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AceEditorComponent.prototype.setMode = function (mode) {\n        this._mode = mode;\n        if (typeof this._mode === 'object') {\n            this._editor.getSession().setMode(this._mode);\n        }\n        else {\n            this._editor.getSession().setMode(\"ace/mode/\" + this._mode);\n        }\n    };\n    Object.defineProperty(AceEditorComponent.prototype, \"value\", {\n        get: function () {\n            return this.text;\n        },\n        set: function (value) {\n            this.setText(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AceEditorComponent.prototype.writeValue = function (value) {\n        this.setText(value);\n    };\n    AceEditorComponent.prototype.registerOnChange = function (fn) {\n        this._onChange = fn;\n    };\n    AceEditorComponent.prototype.registerOnTouched = function (fn) {\n        this._onTouched = fn;\n    };\n    Object.defineProperty(AceEditorComponent.prototype, \"text\", {\n        get: function () {\n            return this._text;\n        },\n        set: function (text) {\n            this.setText(text);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AceEditorComponent.prototype.setText = function (text) {\n        if (text === null || text === undefined) {\n            text = \"\";\n        }\n        if (this._text !== text && this._autoUpdateContent === true) {\n            this._text = text;\n            this._editor.setValue(text);\n            this._onChange(text);\n            this._editor.clearSelection();\n        }\n    };\n    Object.defineProperty(AceEditorComponent.prototype, \"autoUpdateContent\", {\n        set: function (status) {\n            this.setAutoUpdateContent(status);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AceEditorComponent.prototype.setAutoUpdateContent = function (status) {\n        this._autoUpdateContent = status;\n    };\n    Object.defineProperty(AceEditorComponent.prototype, \"durationBeforeCallback\", {\n        set: function (num) {\n            this.setDurationBeforeCallback(num);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AceEditorComponent.prototype.setDurationBeforeCallback = function (num) {\n        this._durationBeforeCallback = num;\n    };\n    AceEditorComponent.prototype.getEditor = function () {\n        return this._editor;\n    };\n    var AceEditorComponent_1;\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], AceEditorComponent.prototype, \"textChanged\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], AceEditorComponent.prototype, \"textChange\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], AceEditorComponent.prototype, \"style\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], AceEditorComponent.prototype, \"options\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], AceEditorComponent.prototype, \"readOnly\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], AceEditorComponent.prototype, \"theme\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], AceEditorComponent.prototype, \"mode\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String),\n        __metadata(\"design:paramtypes\", [String])\n    ], AceEditorComponent.prototype, \"value\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String),\n        __metadata(\"design:paramtypes\", [String])\n    ], AceEditorComponent.prototype, \"text\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], AceEditorComponent.prototype, \"autoUpdateContent\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], AceEditorComponent.prototype, \"durationBeforeCallback\", null);\n    AceEditorComponent = AceEditorComponent_1 = __decorate([\n        Component({\n            selector: 'ace-editor',\n            template: '',\n            styles: [':host { display:block;width:100%; }'],\n            providers: [{\n                    provide: NG_VALUE_ACCESSOR,\n                    useExisting: forwardRef(function () { return AceEditorComponent_1; }),\n                    multi: true\n                }]\n        }),\n        __metadata(\"design:paramtypes\", [ElementRef, NgZone])\n    ], AceEditorComponent);\n    return AceEditorComponent;\n}());\nexport { AceEditorComponent };\n"]}